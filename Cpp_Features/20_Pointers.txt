
## Pointer Types

/----------------------------------------------
/----------------------------------------------

* Pointer Types: Valid / Invalid Pointer
	- Invalid pointer: otomatik ömürlü tanýmlanan pointer için ilk deðer verilmezse

	- invalid pointer: bir pointer a dinamik ömürlü nesnenin adresi atandýysa/ilk deðer verilirse ve pointer deðiþkenin hayatý devam ederken onun gösterdiði nesnenin hayatý biterse
	
	- Valid pointer: Bir pointer bir dizinin son elemanýnýn adresini tutarken, deðeri bir arttýrýlýrsa dizinin bittiði yerin adresini tutuyor olacaktýr 

	- Deðeri nullptr olan bir pointer deðiþken hiçbir nesneyi göstermemektedir. Asla derefere edilmemelidir. 

	- "Null pointer" kavramý mevcut; ancak "null reference" kavramý bulunmaz!

/----------------------------------------------
/----------------------------------------------

#include <iostream>

int main() {

	int* ptr = nullptr;
	std::cout << "(*ptr) : " << *ptr << "\n"; 
	// Exception thrown : read access violation.
}

/----------------------------------------------	
/----------------------------------------------

* Referans ve pointerlarýn karþýlaþtýrýlmasý:

	- Referanslara ilk deðer vermek zorunlu, ilk deðer vermeden referans oluþturulamaz ! 
	- Pointer deðiþkenlere ilk deðer vermek zorunlu deðildir. 
	- "Reference to reference" kavramý yoktur; ancak "pointer to pointer" kavramý mecvuttur. 
/----------------------------------------------
/----------------------------------------------

- **Example** : Pointer deðiþken farklý nesne adreslerini gösterebilir. Kendisi const olmak zorunda deðildir. 

#include <iostream>

int main() {

	int firstNumber = 10;
	int secondNumber = 99;

	int *ptr = &firstNumber;
	ptr = &secondNumber; // OK
	//...
	int* const ptr2 = &secondNumber; // const pointer
	ptr2 = &firstNumber; // NOT OK

}

/----------------------------------------------
/----------------------------------------------

- **Example** : Referanslardan oluþan bir dizi yazýlamaz. 

#include <iostream>

int x, y, z, t;

int main() {

	int* ptrArray[] = { &x, &y, &z, &t }; // OK
	int& refArray[] = { x, y, z, t };     // NOT OK
	// Error C2234 'refArray': arrays of references are illegal	

}

/----------------------------------------------
/----------------------------------------------

* Initialization of pointer and reference arrays:

#include <iostream>

int main() {

	int a[10] = {0}; 
	int(*ptrArray)[10] = &a;
	int(&refArray)[10] = a;

}

/----------------------------------------------
/----------------------------------------------
