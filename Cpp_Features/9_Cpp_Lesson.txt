

## Inline Functions

- Inline functions and inlined functions are different terms
- Implicitly inline functions can be defined in class definition directly. If the function is defined in source file as always, then it is not an inline function. 
- ODR idiom is not violated by the use of inline specifier 
- Constexpr functions are implicitly inlined functions. 
- Both non-static const member functions and non-static non-const member functions can be defined as inlined functions.
- Static member functions can also be defined as inlined function
- Inline functions should be preferred to use for the small and frequently called functions.
- Inline functions are very useful in terms of code optimization. The settings shall be use to set the using level of inline functions.  

/----------------------------------------------
/----------------------------------------------

- **Example** : Inline functions in class definition

class MyClass {
public:
	//Inline function without "inline" specifier
	int func(int val) {
		return val * val;
	}

	int foo(int val);

	//Inline static member function
	static int sfunc(int num1, int num2) {
		return num1 + num2;
	}

	//Inline friend function
	friend int ffunc(int x) {
		//...
		return 1;
	}
}

//Implicitly inlined function 
constexpr int factorial(int n) {
	return n < 2 ? 1 : factorial(n - 1) * n;
}

/----------------------------------------------
/----------------------------------------------

- **Example** :
