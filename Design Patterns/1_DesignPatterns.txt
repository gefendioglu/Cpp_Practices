
 ## DESIGN PATTERNS: 

- Design patterns are guidelines for identifying and solving common design problems in object-oriented programming.

- There are 23 fundamental design patterns. These patterns are grouped into three basic categories: creational, behavioral, and structural.

- The main reason is that they provide best practices solutions to common software design problems based on the collected wisdom of many programmers.

- The second reason is that design patterns provide a concise vocabulary for discussing design problems and their solutions. 

- The wrong design pattern can add unnecessary complexity to an application, and an incorrect or inefficient implementation of a pattern can introduce bugs or compromise performance.

- Some work has also been done to identify patterns that should not be used. These “anti-patterns” are common pitfalls or improper practices that lead to inefficient, ineffective, difficult-to-understand, or difficult-to-maintain code.

- It’s more common that you use patterns as a way to communicate design concepts with the interviewer than that you’re asked to implement a specific design pattern.

- Qt Framework single-slot mechanism is a kind of design pattern implementation. 

/----------------------------------------------
/----------------------------------------------

## Creational Design Patterns

  -	Creational patterns are focused towards how to instantiate an object or group of related objects.

  -	Creational design patterns are design patterns that deal with object creation mechanisms. 

  -	The basic form of object creation could result in design problems or added complexity to the design. Creational design patterns solve this problem by somehow controlling this object creation.

  - Types of Creational Design Patterns: 
	- Factory Design Pattern
	- Builder Design Pattern
	- Prototype Design Pattern
	- Singleton Design Pattern


/----------------------------------------------
/----------------------------------------------

## Structural Design Patterns

  -	Structural patterns are mostly concerned with **object composition**.

  -	Structural design patterns ease the design by identifying a simple way to realize relationships between entities.

  - Types of Structural Design Patterns: 
    - Adapter Design Pattern
	- Bridge Design Pattern 
	- Composite Design Pattern
	- Decorator Design Pattern
	- Facade Design Pattern
	- Flyweight Design Pattern
	- Proxy Design Pattern

/----------------------------------------------
/----------------------------------------------

## Behavioral Design Patterns

  - Behavioral design patterns identify common communication patterns between objects. These patterns increase flexibility.

  - Types of Behavioral Design Patterns: 
    - Chain of Responsibility Design Pattern
	- Command Design Pattern
	- Interpreter Design Pattern
	- Iterator Design Pattern
	- Mediator Design Pattern
	- Memento Design Pattern
	- Observer Design Pattern
	- State Design Pattern
	- Strategy Design Pattern
	- Template Method Design Pattern
	- Visitor Design Pattern

/----------------------------------------------
/----------------------------------------------

## Important Design Patterns

  - From Creational Design Patterns: 
   - Factory method 
   - Singleton 

  - From Structural Design Patterns: 
   - Adapter
   - Bridge 
   - Decorator
   - Facade 
   - Composite 
   - Proxy 

  - From Behavioral Design Patterns: 
    - Observer 
    - Visitor 
    - Template method
    - Strategy 
      

/----------------------------------------------
/----------------------------------------------